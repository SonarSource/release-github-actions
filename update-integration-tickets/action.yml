name: 'Update integrations tickets'
description: 'Finds SQS and SC integration tickets linked to a release ticket and optionally updates the SQS ticket fix versions.'
author: 'SonarSource'

inputs:
  jira_user:
    description: 'Jira user (email) for authentication.'
    required: true
  jira_token:
    description: 'Jira API token for authentication.'
    required: true
  release_ticket_key:
    description: 'The key of the release ticket (e.g., REL-1234) to find the linked integration tickets from.'
    required: true
  sqs_project_key:
    description: 'The Jira project key to search for the linked SQS integration ticket.'
    required: false
    default: 'SONAR'
  sc_project_key:
    description: 'The Jira project key to search for the linked SC integration ticket.'
    required: false
    default: 'SC'
  sqs_fix_versions:
    description: 'Comma-separated list of fix versions to set on the SQS integration ticket (e.g., "10.1, 10.2").'
    required: false
  use_sandbox:
    description: "Set to 'false' to use the production Jira server."
    required: false
    default: 'true'

outputs:
  sqs_ticket_key:
    description: 'The key of the found SQS integration ticket.'
    value: ${{ steps.run_python_script.outputs.sqs_ticket_key }}
  sc_ticket_key:
    description: 'The key of the found SC integration ticket.'
    value: ${{ steps.run_python_script.outputs.sc_ticket_key }}

runs:
  using: "composite"
  steps:
    - name: Set up Python
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: '3.8'

    - name: Install dependencies
      shell: bash
      run: pip install -r ${{ github.action_path }}/requirements.txt

    - name: Run Python Script to Find Tickets
      id: run_python_script
      shell: bash
      run: |
        SANDBOX_FLAG=""
        if [[ "${{ inputs.use_sandbox }}" == "true" ]]; then
          SANDBOX_FLAG="--use-sandbox"
        fi

        OPTS=""
        if [[ -n "${{ inputs.sqs_fix_versions }}" ]]; then
          OPTS="$OPTS --sqs-fix-versions=${{ inputs.sqs_fix_versions }}"
        fi

        python ${{ github.action_path }}/update_integration_tickets.py \
          --release-ticket-key="${{ inputs.release_ticket_key }}" \
          --sqs-project-key="${{ inputs.sqs_project_key }}" \
          --sc-project-key="${{ inputs.sc_project_key }}" \
          $SANDBOX_FLAG \
          $OPTS >> $GITHUB_OUTPUT
      env:
        JIRA_USER: ${{ inputs.jira_user }}
        JIRA_TOKEN: ${{ inputs.jira_token }}
