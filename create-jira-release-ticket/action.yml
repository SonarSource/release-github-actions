name: 'Create Jira Release Ticket'
description: 'Creates a Jira release ticket.'
author: 'SonarSource'

inputs:
  project-name:
    description: 'The display name of the project (e.g., SonarIaC)'
    required: true
  short-description:
    description: 'A short description for the release'
    required: true
  sq-compatibility:
    description: 'SonarQube compatibility version (e.g., 2025.3)'
    required: true
  jira-project-key:
    description: 'The key of the project (e.g., SONARIAC). Required if JIRA_PROJECT_KEY env var is not set.'
  targeted-product:
    description: 'The targeted product version (e.g., 11.0)'
  version:
    description: 'The version being released (e.g., 11.44.2), or leave empty to use the release version.'
  use-jira-sandbox:
    description: "Use the sandbox server instead of the production Jira."
  documentation-status:
    description: 'Status of the documentation'
    default: 'N/A'
  rule-props-changed:
    description: 'Whether rule properties have changed'
    default: 'No'
  jira-release-url:
    description: 'The URL to the Jira release notes page. Required if JIRA_RELEASE_URL env var is not set.'
  sonarlint-changelog:
    description: 'The SonarLint changelog content.'
    default: ''
  start-progress:
    description: 'Whether to start progress on the release ticket.'

outputs:
  release-ticket-key:
    description: 'The key of the created Jira ticket (e.g., REL-123)'
    value: ${{ steps.run_python_script.outputs.ticket_key }}
  release-ticket-url:
    description: 'The URL of the created Jira ticket.'
    value: ${{ steps.run_python_script.outputs.ticket_url }}

runs:
  using: "composite"
  steps:
    - name: Get Jira Credentials from Vault
      id: secrets
      uses: SonarSource/vault-action-wrapper@v3
      with:
        secrets: |
          development/kv/data/jira user | JIRA_USER;
          development/kv/data/jira token | JIRA_TOKEN;

    - name: Set up Python
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: '3.8'

    - name: Install dependencies
      shell: bash
      run: pip install -r ${{ github.action_path }}/requirements.txt

    - uses: SonarSource/release-github-actions/get-release-version@791b75b3be379f454224a79314afdb9b063668f4
      if: ${{ !inputs.version }}

    - name: Get Jira Release Notes URL
      if: ${{ !inputs.jira-release-url && !env.JIRA_RELEASE_URL }}
      uses: SonarSource/release-github-actions/get-jira-release-notes@791b75b3be379f454224a79314afdb9b063668f4
      with:
        jira-project-key: ${{ inputs.jira-project-key }}
        use-jira-sandbox: ${{ inputs.use-jira-sandbox }}

    - name: Run Python Script to Create Ticket
      id: run_python_script
      shell: bash
      env:
        JIRA_USER: ${{ fromJSON(steps.secrets.outputs.vault).JIRA_USER }}
        JIRA_TOKEN: ${{ fromJSON(steps.secrets.outputs.vault).JIRA_TOKEN }}
        JIRA_PROD_URL: "https://sonarsource.atlassian.net/"
        JIRA_SANDBOX_URL: "https://sonarsource-sandbox-608.atlassian.net/"
      run: |
        PROJECT_KEY="${{ inputs.jira-project-key || env.JIRA_PROJECT_KEY }}"
        
        if [[ -z "$PROJECT_KEY" ]]; then
          echo "::error::Both jira-project-key input and JIRA_PROJECT_KEY environment variable are missing. One must be provided."
          exit 1
        fi

        python ${{ github.action_path }}/create_release_ticket.py \
          --project-key="$PROJECT_KEY" \
          --project-name="${{ inputs.project-name }}" \
          --version="${{ inputs.version || env.RELEASE_VERSION }}" \
          --short-description="${{ inputs.short-description }}" \
          --targeted-product="${{ inputs.targeted-product }}" \
          --sq-compatibility="${{ inputs.sq-compatibility }}" \
          --jira-url="${{ ((inputs.use-jira-sandbox || env.USE_JIRA_SANDBOX) == 'true') && env.JIRA_SANDBOX_URL || env.JIRA_PROD_URL }}" \
          --documentation-status="${{ inputs.documentation-status }}" \
          --rule-props-changed="${{ inputs.rule-props-changed }}" \
          --jira-release-url="${{ inputs.jira-release-url || env.JIRA_RELEASE_URL }}" \
          --sonarlint-changelog="${{ inputs.sonarlint-changelog }}" >> $GITHUB_OUTPUT

    - name: Start Progress on Release Ticket
      if: ${{ inputs.start-progress == 'true' }}
      uses: SonarSource/release-github-actions/update-release-ticket-status@791b75b3be379f454224a79314afdb9b063668f4
      with:
        release-ticket-key: ${{ steps.run_python_script.outputs.ticket_key }}
        status: "Start Progress"

    - name: Set Env Variables
      shell: bash
      run: |
        echo "RELEASE_TICKET_KEY=${{ steps.run_python_script.outputs.ticket_key }}" >> $GITHUB_ENV
        echo "RELEASE_TICKET_URL=${{ steps.run_python_script.outputs.ticket_url }}" >> $GITHUB_ENV
