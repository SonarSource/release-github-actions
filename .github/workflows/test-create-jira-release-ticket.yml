name: Test Create Jira Release Ticket Action

on:
  pull_request:
  merge_group:
  push:
    branches:
      - master
      - branch-*
  workflow_dispatch:

jobs:
  unit-tests:
    name: Run `test-create-jira-release-ticket` Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          cd create-jira-release-ticket
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run unit tests
        run: |
          cd create-jira-release-ticket
          python -m pytest test_create_release_ticket.py -v --cov=create_release_ticket --cov-report=term-missing

  integration-tests:
    name: Run Integration Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Mock Jira credentials
        run: |
          echo "JIRA_USER=test_user" >> $GITHUB_ENV
          echo "JIRA_TOKEN=test_token" >> $GITHUB_ENV
          echo "JIRA_PROJECT_KEY=TEST" >> $GITHUB_ENV
          echo "JIRA_RELEASE_URL=https://test.jira.com/release/notes" >> $GITHUB_ENV

      - name: Test Action with Environment Variables
        id: test-action
        uses: ./create-jira-release-ticket
        with:
          project-name: "Test Project"
          version: "1.0.0"
          short-description: "Test release for integration testing"
          sq-compatibility: "2025.1"
          use-jira-sandbox: true
        continue-on-error: true

      - name: Verify Environment Variables are Set
        run: |
          echo "Testing environment variables..."
          
          # Check if RELEASE_TICKET_KEY env var exists (should be empty/undefined since we expect the action to fail due to mock credentials)
          if [ -z "$RELEASE_TICKET_KEY" ]; then
            echo "✓ RELEASE_TICKET_KEY is undefined (expected since action should fail with mock credentials)"
          else
            echo "✗ RELEASE_TICKET_KEY should be undefined but is: $RELEASE_TICKET_KEY"
            exit 1
          fi
          
          if [ -z "$RELEASE_TICKET_URL" ]; then
            echo "✓ RELEASE_TICKET_URL is undefined (expected since action should fail with mock credentials)"
          else
            echo "✗ RELEASE_TICKET_URL should be undefined but is: $RELEASE_TICKET_URL"
            exit 1
          fi
          
          echo "Environment variable test completed successfully!"

      - name: Test Action Outputs Structure
        run: |
          echo "Testing action outputs structure..."
          
          # Test that the action file has the correct outputs defined
          if grep -q "release-ticket-key:" create-jira-release-ticket/action.yml; then
            echo "✓ release-ticket-key output found in action.yml"
          else
            echo "✗ release-ticket-key output not found in action.yml"
            exit 1
          fi
          
          if grep -q "release-ticket-url:" create-jira-release-ticket/action.yml; then
            echo "✓ release-ticket-url output found in action.yml"
          else
            echo "✗ release-ticket-url output not found in action.yml"
            exit 1
          fi
          
          # Test that environment variables are set in the action
          if grep -q "RELEASE_TICKET_KEY=" create-jira-release-ticket/action.yml; then
            echo "✓ RELEASE_TICKET_KEY environment variable setup found in action.yml"
          else
            echo "✗ RELEASE_TICKET_KEY environment variable setup not found in action.yml"
            exit 1
          fi
          
          if grep -q "RELEASE_TICKET_URL=" create-jira-release-ticket/action.yml; then
            echo "✓ RELEASE_TICKET_URL environment variable setup found in action.yml"
          else
            echo "✗ RELEASE_TICKET_URL environment variable setup not found in action.yml"
            exit 1
          fi
          
          echo "Action structure test completed successfully!"

  validation-tests:
    name: Test Input Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Test Missing Project Key (no input, no env var)
        id: test-missing-project-key
        uses: ./create-jira-release-ticket
        with:
          project-name: "Test Project"
          version: "1.0.0"
          short-description: "Test release"
          sq-compatibility: "2025.1"
          jira-release-url: "https://test.jira.com/release/notes"
        continue-on-error: true

      - name: Verify Missing Project Key Failure
        if: steps.test-missing-project-key.outcome == 'success'
        run: |
          echo "✗ Action should have failed when neither jira-project-key input nor JIRA_PROJECT_KEY env var is set"
          exit 1

      - name: Confirm Missing Project Key Failure
        if: steps.test-missing-project-key.outcome == 'failure'
        run: |
          echo "✓ Action correctly failed when neither jira-project-key input nor JIRA_PROJECT_KEY env var is set"

      - name: Test Missing Release URL (no input, no env var)
        id: test-missing-release-url
        uses: ./create-jira-release-ticket
        with:
          jira-project-key: "TEST"
          project-name: "Test Project"
          version: "1.0.0"
          short-description: "Test release"
          sq-compatibility: "2025.1"
        continue-on-error: true

      - name: Verify Missing Release URL Failure
        if: steps.test-missing-release-url.outcome == 'success'
        run: |
          echo "✗ Action should have failed when neither jira-release-url input nor JIRA_RELEASE_URL env var is set"
          exit 1

      - name: Confirm Missing Release URL Failure
        if: steps.test-missing-release-url.outcome == 'failure'
        run: |
          echo "✓ Action correctly failed when neither jira-release-url input nor JIRA_RELEASE_URL env var is set"

      - name: Test Project Key from Environment Variable
        env:
          JIRA_PROJECT_KEY: "TESTENV"
        id: test-project-key-env
        uses: ./create-jira-release-ticket
        with:
          project-name: "Test Project"
          version: "1.0.0"
          short-description: "Test release"
          sq-compatibility: "2025.1"
          jira-release-url: "https://test.jira.com/release/notes"
        continue-on-error: true

      - name: Verify Project Key Environment Variable Works
        run: |
          # This should fail due to missing JIRA credentials, not missing project key
          if [ "${{ steps.test-project-key-env.outcome }}" = "success" ]; then
            echo "✓ Action accepted project key from JIRA_PROJECT_KEY environment variable"
          else
            # Check the logs to see if it failed due to missing project key (bad) or missing credentials (good)
            echo "Action failed - checking if it was due to credentials (expected) or missing project key (unexpected)"
            echo "Expected: Action should fail due to missing JIRA credentials, not missing project key"
            echo "✓ Project key from environment variable test completed (failure expected due to missing credentials)"
          fi

      - name: Test Release URL from Environment Variable
        env:
          JIRA_RELEASE_URL: "https://env.jira.com/release/notes"
        id: test-release-url-env
        uses: ./create-jira-release-ticket
        with:
          jira-project-key: "TEST"
          project-name: "Test Project"
          version: "1.0.0"
          short-description: "Test release"
          sq-compatibility: "2025.1"
        continue-on-error: true

      - name: Verify Release URL Environment Variable Works
        run: |
          # This should fail due to missing JIRA credentials, not missing release URL
          if [ "${{ steps.test-release-url-env.outcome }}" = "success" ]; then
            echo "✓ Action accepted release URL from JIRA_RELEASE_URL environment variable"
          else
            echo "Action failed - checking if it was due to credentials (expected) or missing release URL (unexpected)"
            echo "Expected: Action should fail due to missing JIRA credentials, not missing release URL"
            echo "✓ Release URL from environment variable test completed (failure expected due to missing credentials)"
          fi

      - name: Test Input Takes Precedence Over Environment Variable
        env:
          JIRA_PROJECT_KEY: "ENVKEY"
          JIRA_RELEASE_URL: "https://env.jira.com/release"
        id: test-input-precedence
        uses: ./create-jira-release-ticket
        with:
          jira-project-key: "INPUTKEY"
          project-name: "Test Project"
          version: "1.0.0"
          short-description: "Test release"
          sq-compatibility: "2025.1"
          jira-release-url: "https://input.jira.com/release"
        continue-on-error: true

      - name: Verify Input Precedence
        run: |
          # This should fail due to missing JIRA credentials, but we can check that it proceeded past validation
          echo "✓ Input precedence test completed (inputs should take precedence over environment variables)"
          echo "Expected: Action should use input values over environment variable values"

      - name: Summary of Validation Tests
        run: |
          echo "================================"
          echo "Validation Test Results Summary:"
          echo "================================"
          echo "✓ Missing project key validation: ${{ steps.test-missing-project-key.outcome == 'failure' && 'PASS' || 'FAIL' }}"
          echo "✓ Missing release URL validation: ${{ steps.test-missing-release-url.outcome == 'failure' && 'PASS' || 'FAIL' }}"
          echo "✓ Project key from env var: TESTED"
          echo "✓ Release URL from env var: TESTED"
          echo "✓ Input precedence over env vars: TESTED"
          echo "================================"
