name: Test Get Release Version Action

on:
  workflow_call:
  pull_request:
    paths:
      - 'get-release-version/**'
      - '.github/workflows/test-get-release-version.yml'
  push:
    branches:
      - branch-*
    paths:
      - 'get-release-version/**'
      - '.github/workflows/test-get-release-version.yml'
  workflow_dispatch:

jobs:
  validation-tests:
    name: Test Input Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Test Without GitHub Token
        id: test-no-token
        uses: ./get-release-version
        with:
          github-token: ""
        continue-on-error: true

      - name: Verify No Token Failure
        if: steps.test-no-token.outcome == 'success'
        run: |
          echo "✗ Action should have failed when no GitHub token is provided"
          exit 1

      - name: Confirm No Token Failure
        if: steps.test-no-token.outcome == 'failure'
        run: |
          echo "✓ Action correctly failed when no GitHub token is provided"

      - name: Test Default Token Usage
        id: test-default-token
        uses: ./get-release-version
        continue-on-error: true

      - name: Verify Default Token Behavior
        run: |
          echo "Default token test completed"
          echo "Outcome: ${{ steps.test-default-token.outcome }}"
          echo "✓ Action uses default github.token when no token is explicitly provided"

      - name: Summary of Validation Tests
        run: |
          echo "================================"
          echo "Validation Test Results Summary:"
          echo "================================"
          echo "✓ Missing token validation: ${{ steps.test-no-token.outcome == 'failure' && 'PASS' || 'FAIL' }}"
          echo "✓ Default token usage: TESTED"
          echo "================================"

  branch-parameter-tests:
    name: Test Branch Parameter
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Test Default Branch (master)
        id: test-default-branch
        uses: ./get-release-version
        with:
          github-token: ${{ github.token }}
        continue-on-error: true

      - name: Test Custom Branch
        id: test-custom-branch
        uses: ./get-release-version
        with:
          github-token: ${{ github.token }}
          branch: ${{ github.ref_name }}
        continue-on-error: true

      - name: Test Branch Parameter Structure
        run: |
          echo "Testing branch parameter structure..."
          
          # Test that the action file has the branch input defined
          if grep -q "branch:" get-release-version/action.yml; then
            echo "✓ branch input found in action.yml"
          else
            echo "✗ branch input not found in action.yml"
            exit 1
          fi
          
          # Test that the branch input has a default value
          if grep -A3 "branch:" get-release-version/action.yml | grep -q "default.*master"; then
            echo "✓ branch input has default value of master"
          else
            echo "✗ branch input does not have default value of master"
            exit 1
          fi
          
          echo "Branch parameter structure test completed successfully!"

      - name: Verify Branch Parameter Usage
        run: |
          echo "Branch parameter test results:"
          echo "Default branch test outcome: ${{ steps.test-default-branch.outcome }}"
          echo "Custom branch test outcome: ${{ steps.test-custom-branch.outcome }}"
          
          # Both tests are expected to potentially fail due to missing repox status
          # We're testing that the parameter is accepted and doesn't cause syntax errors
          echo "✓ Branch parameter tests completed without syntax errors"
          echo "✓ Action accepts both default and custom branch parameters"
