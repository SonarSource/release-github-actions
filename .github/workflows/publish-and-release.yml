# yamllint disable rule:line-length
---
name: Publish and Release reusable workflow

on:
  workflow_call:
    inputs:
      version:
        type: string
        description: 'The version number for the new release (e.g., v1.0.0). This will also be the tag name.'
        required: true
      branch:
        type: string
        description: 'The branch, commit, or tag to create the release from.'
        required: false
        default: 'master'
      draft:
        type: boolean
        description: 'A boolean value to indicate if the release should be a draft. Defaults to true.'
        required: false
        default: true
      release_notes:
        type: string
        description: 'The full markdown content for the release notes. If provided, this is used directly.'
        required: false
        default: ''
      jira_release_name:
        type: string
        description: 'The name of the Jira release version. If provided and release_notes is empty, notes will be fetched from Jira.'
        required: false
        default: ''
      jira_project_key:
        type: string
        description: 'The Jira project key (e.g., "SONARPHP") to fetch notes from.'
        required: false
      issue_types:
        type: string
        description: 'Optional comma-separated list of Jira issue types to include in the release notes, in order.'
        required: false
        default: ''
      use_sandbox:
        type: boolean
        description: "Use the sandbox Jira server instead of production."
        required: false
        default: true
      publishToBinaries:
        type: boolean
        description: Flag to enable the publication to binaries
        default: false
        required: false
      mavenCentralSync:
        type: boolean
        description: Enable synchronization to Maven Central
        default: false
        required: false
      slackChannel:
        type: string
        description: Channel to post notifications
        default: build
        required: false

    outputs:
      release_url:
        description: 'The URL of the newly created release.'
        value: ${{ jobs.publish_release.outputs.release_url }}

jobs:
  publish_release:
    name: Publish GitHub Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    outputs:
      release_url: ${{ steps.publish.outputs.release_url }}
      release_id: ${{ steps.publish.outputs.release_id }}
    steps:
      - name: Get Jira Credentials from Vault
        id: secrets
        uses: SonarSource/vault-action-wrapper@v3
        with:
          secrets: |
            development/kv/data/jira user | JIRA_USER;
            development/kv/data/jira token | JIRA_TOKEN;

      - name: Publish GitHub Release
        id: publish
        uses: SonarSource/release-github-actions/publish-github-release@publish_draft_version
        with:
          version: ${{ inputs.version }}
          branch: ${{ inputs.branch }}
          draft: ${{ inputs.draft }}
          release_notes: ${{ inputs.release_notes }}
          jira_release_name: ${{ inputs.jira_release_name }}
          jira_project_key: ${{ inputs.jira_project_key }}
          jira_user: ${{ fromJSON(steps.secrets.outputs.vault).JIRA_USER }}
          jira_token: ${{ fromJSON(steps.secrets.outputs.vault).JIRA_TOKEN }}
          issue_types: ${{ inputs.issue_types }}
          use_sandbox: ${{ inputs.use_sandbox }}
          github_token: ${{ github.token }}

  sonar_release:
    name: Do Sonar Release
    needs: publish_release
    if: ${{ inputs.draft == false }}
    permissions:
      id-token: write
      contents: write
    uses: SonarSource/release-github-actions/.github/workflows/sonar-release.yaml@publish_draft_version
    with:
      release_tag_name: ${{ inputs.version }}
      release_id: ${{ needs.publish_release.outputs.release_id }}
      publishToBinaries: ${{ inputs.publishToBinaries }}
      mavenCentralSync: ${{ inputs.mavenCentralSync }}
      slackChannel: ${{ inputs.slackChannel }}
      dryRun: ${{ inputs.draft }}
