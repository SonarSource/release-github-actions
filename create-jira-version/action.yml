name: Create Jira Version

description: 'Creates a Jira version.'

inputs:
    jira_project_key:
        description: 'The key of the Jira project (e.g., SONARIAC).'
        required: true
    jira_version_name:
        description: 'The name of the Jira version to create (e.g., 1.2.3).'
        required: false
    use_jira_sandbox:
        description: "Use the sandbox Jira server instead of production."
        required: false
        default: 'false'

outputs:
    jira_version_id:
        description: 'The ID of the created Jira version.'
        value: ${{ steps.run_python_script.outputs.new_version_id }}
    jira_version_name:
        description: 'The name of the created Jira version.'
        value: ${{ steps.run_python_script.outputs.new_version_name }}

runs:
  using: "composite"
  steps:
    - name: Get Jira Credentials from Vault
      uses: SonarSource/vault-action-wrapper@v3
      id: secrets
      with:
        secrets: |
          development/kv/data/jira user | JIRA_USER;
          development/kv/data/jira token | JIRA_TOKEN;

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'

    - name: Install Dependencies
      shell: bash
      run: pip install -r ${{ github.action_path }}/requirements.txt

    - uses: SonarSource/release-github-actions/get-jira-version@9fcdc700a2046505f6ebeed43be2176569910084
      if: ${{ !inputs.jira_version_name }}

    - name: Determine New Jira Version
      id: determine_version_name
      if: ${{ !inputs.jira_version_name }}
      shell: bash
      run: |
        echo "VERSION_NAME=$(echo "${{ steps.get-jira-version.outputs.jira_version }}" | awk -F. '{$NF+=1; OFS="."; print $0}')" >> $GITHUB_OUTPUT

    - name: Create Jira Version
      id: run_python_script
      shell: bash
      env:
        JIRA_USER: ${{ fromJSON(steps.secrets.outputs.vault).JIRA_USER }}
        JIRA_TOKEN: ${{ fromJSON(steps.secrets.outputs.vault).JIRA_TOKEN }}
        JIRA_PROD_URL: "https://sonarsource.atlassian.net/"
        JIRA_SANDBOX_URL: "https://sonarsource-sandbox-608.atlassian.net/"
      run: |
          python ${{ github.action_path }}/create_jira_version.py \
          --project-key="${{ inputs.jira_project_key }}" \
          --version-name="${{ inputs.jira_version_name || steps.determine_version_name.outputs.VERSION_NAME }}" \
          --jira-url="${{ ((inputs.use_jira_sandbox || env.USE_JIRA_SANDBOX) == 'true') && env.JIRA_SANDBOX_URL || env.JIRA_PROD_URL }}" 
          >> $GITHUB_OUTPUT
