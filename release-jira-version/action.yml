name: 'Release Jira Version'
description: 'Releases a specified Jira version and creates a new one.'
author: 'SonarSource'

inputs:
  jira-project-key:
    description: 'The key of the Jira project (e.g., SONARIAC). Required if JIRA_PROJECT_KEY env var is not set.'
    required: false
  jira-version-name:
    description: 'The name of the Jira version to release (e.g., 1.2.3). Can also be set via JIRA_VERSION_NAME environment variable. If not provided, the script will determine the next version based on the Jira version.'
    required: false
  use-jira-sandbox:
    description: "Use the sandbox server instead of the production Jira. Can also be controlled via USE_JIRA_SANDBOX environment variable."
    required: false

runs:
  using: "composite"
  steps:
    - name: Get Jira Credentials from Vault
      id: secrets
      uses: SonarSource/vault-action-wrapper@v3
      with:
        secrets: |
          development/kv/data/jira user | JIRA_USER;
          development/kv/data/jira token | JIRA_TOKEN;

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'

    - name: Install dependencies
      shell: bash
      run: pip install -r ${{ github.action_path }}/requirements.txt

    - uses: SonarSource/release-github-actions/get-jira-version@791b75b3be379f454224a79314afdb9b063668f4
      id: get-jira-version
      if: ${{ !inputs.jira-version-name && !env.JIRA_VERSION_NAME }}

    - name: Determine Jira Version
      id: determine-version-name
      if: ${{ !inputs.jira-version-name && !env.JIRA_VERSION_NAME }}
      shell: bash
      run: |
        echo "VERSION_NAME=$(echo "${{ steps.get-jira-version.outputs.jira-version-name }}" | awk -F. '{$NF+=1; OFS="."; print $0}')" >> $GITHUB_OUTPUT

    - name: Release Jira Version
      id: run_python_script
      shell: bash
      env:
        JIRA_USER: ${{ fromJSON(steps.secrets.outputs.vault).JIRA_USER }}
        JIRA_TOKEN: ${{ fromJSON(steps.secrets.outputs.vault).JIRA_TOKEN }}
        JIRA_PROD_URL: "https://sonarsource.atlassian.net/"
        JIRA_SANDBOX_URL: "https://sonarsource-sandbox-608.atlassian.net/"
      run: |
        PROJECT_KEY="${{ inputs.jira-project-key || env.JIRA_PROJECT_KEY }}"
        
        if [[ -z "$PROJECT_KEY" ]]; then
          echo "::error::Both jira-project-key input and JIRA_PROJECT_KEY environment variable are missing. One must be provided."
          exit 1
        fi

        python ${{ github.action_path }}/release_jira_version.py \
        --project-key="$PROJECT_KEY" \
        --version-name="${{ inputs.jira-version-name || env.JIRA_VERSION_NAME || steps.determine-version-name.outputs.VERSION_NAME }}" \
        --jira-url="${{ ((inputs.use-jira-sandbox || env.USE_JIRA_SANDBOX) == 'true') && env.JIRA_SANDBOX_URL || env.JIRA_PROD_URL }}" \
        >> $GITHUB_OUTPUT
